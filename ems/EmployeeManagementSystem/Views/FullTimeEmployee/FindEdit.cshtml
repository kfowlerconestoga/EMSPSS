@model EmployeeManagementSystem.Models.FullTimeEmployee
@{
    ViewBag.Title = "Edit Employee";
}

<h2>Edit Employee</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    
    $(function () {
        $('.focus :input').focus();
    });
   
</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Employee</legend>

        @Html.HiddenFor(model => model.EmployeeRefId)
        @Html.HiddenFor(model => model.EmployedWithId)
        @Html.HiddenFor(model => model.Employee.EmployeeId)
        
        @Html.HiddenFor(model => model.Employee.Completed)
        
        
        

        <div class="editor-label">
            First Name
        </div>
        <div class="editor-field focus">
            @Html.EditorFor(model => model.Employee.FirstName)
            @Html.ValidationMessageFor(model => model.Employee.FirstName)
        </div>

        <div class="editor-label">
            Last Name
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Employee.LastName)
            @Html.ValidationMessageFor(model => model.Employee.LastName)
        </div>

        <div class="editor-label">
            SIN
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Employee.SIN_BN)
            @Html.ValidationMessageFor(model => model.Employee.SIN_BN)
            @Html.ValidationMessage("SIN_BN")
        </div>       

        <div class="editor-label">
            Date of Birth
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Employee.DateOfBirth)
            @Html.ValidationMessageFor(model => model.Employee.DateOfBirth)
            @Html.ValidationMessage("DOB")
        </div>

        
        @Html.HiddenFor(model => model.DateOfHire)
        @if(!User.IsInRole("Admin"))
        {
            @Html.HiddenFor(model => model.DateOfTermination)
            @Html.HiddenFor(model => model.Salary)
            @Html.HiddenFor(model => model.ReasonForLeavingId)
        }
        else
        {
            <div class="editor-label">
                Date of Termination
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DateOfTermination)
                @Html.ValidationMessageFor(model => model.DateOfTermination)
                @Html.ValidationMessage("DOT")
            </div>
            
            
            <div class="editor-label">
                Reason for Leaving
            </div>
            <div class="editor-field">                
                @Html.DropDownListFor(model => model.ReasonForLeavingId, new List<SelectListItem>{new SelectListItem { Text = "--Select an Item--", Value = "0" },new SelectListItem { Text = "Left Company", Value = "1" }, new SelectListItem { Text = "Retired", Value = "2" }, new SelectListItem { Text = "Terminated", Value = "3" }, new SelectListItem { Text = "Laid Off", Value = "4" }, new SelectListItem { Text = "Contract Lapsed", Value = "5" }})
                @Html.ValidationMessage("ReasonForLeaving")
            </div>
            
            
            <div class="editor-label">
                Salary
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Salary)
                @Html.ValidationMessageFor(model => model.Salary)
            </div>
        }

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}
